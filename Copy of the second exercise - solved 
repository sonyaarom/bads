{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.3"
    },
    "colab": {
      "name": "Копия блокнота \"2_ex_descriptive_analytics.ipynb\"",
      "provenance": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sonyaarom/bads/blob/master/Copy%20of%20the%20second%20exercise%20-%20solved%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ibI4WJtUMkMS"
      },
      "source": [
        "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/Humboldt-WI/bads/blob/master/exercises/2_ex_descriptive_analytics.ipynb) "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lQTFGv9-MkMY"
      },
      "source": [
        "# BADS Exercise 2 on the foundations of descriptive analytics\n",
        "The second exercise comprises one more task to advance your skills in Python programming. It's main focus is on cluster analysis."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tyjPs-CQMkMZ"
      },
      "source": [
        "## 1. Further exercises on Python programming\n",
        "The following exercise tasks revisit some concepts covered in [Tutorial 1 on Python programming](https://github.com/Humboldt-WI/bads/blob/master/tutorials/1_nb_python_intro.ipynb) "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fFnnNKCKMkMZ"
      },
      "source": [
        "### Using inbuilt functions and libraries\n",
        "In Python and other programming language, we use inbuilt functions all the time. Libraries like `NumPy` and `Pandas`, which offer a ton of functionality for handling and analyzing data, are the main reason why the Python language is such a good fit for data science. Let's practice our ability to access libraries and use their functions with some concrete tasks.\n",
        "\n",
        "The density of the normal distribution with mean $\\mu$ and variance $\\sigma$ is given as\n",
        "$$f(x | \\mu ,\\sigma ^{2}) = {\\frac {1}{\\sqrt {2\\sigma ^{2}\\pi}}}e^{-{\\frac {(x-\\mu )^{2}}{2\\sigma ^{2}}}}$$\n",
        "\n",
        "Let's create a nice plot of the bell curve that is so famous and characteristic for the normal distribution. Below, we already made sure that relevant libraries are imported. First, define two variables that store the two parameters of the normal distribution; no need to spill out these parameters, right? Next generate some values $x$. Say you want to plot the bell curve for $x \\in \\{-3, 3\\} $. Use the `NumPy` function `linespace()` for this purpose. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v2SNLtt5MkMZ",
        "outputId": "c3cb33c2-5382-40be-e44e-4cf67ffa6b22"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import scipy.stats as stats\n",
        "import math\n",
        "\n",
        "mu = 0\n",
        "sigma = 1\n",
        "\n",
        "x = np.linspace(-3,3,100)\n",
        "print (x)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[-3.         -2.93939394 -2.87878788 -2.81818182 -2.75757576 -2.6969697\n",
            " -2.63636364 -2.57575758 -2.51515152 -2.45454545 -2.39393939 -2.33333333\n",
            " -2.27272727 -2.21212121 -2.15151515 -2.09090909 -2.03030303 -1.96969697\n",
            " -1.90909091 -1.84848485 -1.78787879 -1.72727273 -1.66666667 -1.60606061\n",
            " -1.54545455 -1.48484848 -1.42424242 -1.36363636 -1.3030303  -1.24242424\n",
            " -1.18181818 -1.12121212 -1.06060606 -1.         -0.93939394 -0.87878788\n",
            " -0.81818182 -0.75757576 -0.6969697  -0.63636364 -0.57575758 -0.51515152\n",
            " -0.45454545 -0.39393939 -0.33333333 -0.27272727 -0.21212121 -0.15151515\n",
            " -0.09090909 -0.03030303  0.03030303  0.09090909  0.15151515  0.21212121\n",
            "  0.27272727  0.33333333  0.39393939  0.45454545  0.51515152  0.57575758\n",
            "  0.63636364  0.6969697   0.75757576  0.81818182  0.87878788  0.93939394\n",
            "  1.          1.06060606  1.12121212  1.18181818  1.24242424  1.3030303\n",
            "  1.36363636  1.42424242  1.48484848  1.54545455  1.60606061  1.66666667\n",
            "  1.72727273  1.78787879  1.84848485  1.90909091  1.96969697  2.03030303\n",
            "  2.09090909  2.15151515  2.21212121  2.27272727  2.33333333  2.39393939\n",
            "  2.45454545  2.51515152  2.57575758  2.63636364  2.6969697   2.75757576\n",
            "  2.81818182  2.87878788  2.93939394  3.        ]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Pamo0-4kMkMa"
      },
      "source": [
        "Then, for each value of $x$, compute the probability that a normally distributed random variable would be arbitrarily close to that value. To calculate the probability density of the normal distribution, you can use the function `norm.pdf`. The function is part of the *stats models library*, which we import below. So you can write something like `stats.norm.pdf(...)` where ... stands for the arguments that the function requires. Make sure to store the results of the computation in a variable **nvValues**."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cGSu9pulMkMa",
        "outputId": "8dbab23a-efb3-45b1-f844-142279a3b504"
      },
      "source": [
        "nvValues = stats.norm.pdf(x,loc=mu, scale=sigma)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(100,)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XrTv1es9MkMa"
      },
      "source": [
        "We are now ready to plot. Create a simple graph of **nvValues** against **x** using the `plot()`function. Let's say you want your line to be in red color. Use the help and web search to find out how to plot a red line. Also make sure to label your axes; remember: never create a plot without axis labels."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "id": "57eP0x1lMkMb",
        "outputId": "cecc2fa6-0054-498a-ff43-6bab1037dbbc"
      },
      "source": [
        "plt.plot(x,nvValues, c=\"red\")\n",
        "plt.xlabel (\"X\")\n",
        "plt.ylabel (\"Probability Density\")\n",
        "plt.title(\"Normal Distribution\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Normal Distribution')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MVPmMS0YMkMb"
      },
      "source": [
        "## 2. Exercises on descriptive analytics\n",
        "The following exercise tasks revisit some concepts covered in [Tutorial 2 on descriptive analytics](https://github.com/Humboldt-WI/bads/blob/master/tutorials/2_nb_descriptive_analytics.ipynb). \n",
        "\n",
        "### 2.1 Data generation\n",
        "We want to revisit kMeans and need some data for this purpose. Make use of the function `make_blobs()`, which is part of the `sklearn` library to generate some artificial data. Say we want to **create data with 4 clusters**. Make sure to configure the `make_blobs()` function appropriately. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xaL9caMNMkMb"
      },
      "source": [
        "from sklearn.datasets import make_blobs\n",
        "centers =  [(0, 0), (5, 5), (0, 4), (4, 0)] \n",
        "std = 0.8\n",
        "num = 1000\n",
        "X,y = make_blobs (n_samples=num,\n",
        "                  centers=centers, \n",
        "                  cluster_std = std,\n",
        "                  random_state=2020)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "U-uwfOiKMkMb"
      },
      "source": [
        "## 2.2 kMeans\n",
        "The second tutorial provided a *from scratch implementation* of the kMeans algorithm. Go back to the tutorial and copy/paste the relevant parts of the code into this notebook. This will allow you to run the algorithm here."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2jK8vFfJMkMb"
      },
      "source": [
        "\n",
        "def euclidean_distance(a, b):\n",
        "    return np.sqrt(np.sum((a - b)**2)) # other distance measures also possible\n",
        "\n",
        "\n",
        "def label_cluster(n_samples, clusters):\n",
        "    \"\"\"each sample will get the label of the cluster it was assigned to\"\"\"\n",
        "    labels = np.empty(n_samples) # creates empty array as long as samples for future labels\n",
        "\n",
        "    for cluster_idx, cluster in enumerate(clusters):\n",
        "        for sample_index in cluster:\n",
        "            labels[sample_index] = cluster_idx # assign labels to each sample\n",
        "    return labels\n",
        "\n",
        "\n",
        "def create_clusters(K, X, centroids):\n",
        "    \"\"\"Assign the samples to the closest centroids to create clusters\"\"\"\n",
        "    clusters = [[] for _ in range(K)] # creates a list of K number of lists\n",
        "    for idx, sample in enumerate(X):\n",
        "        centroid_idx = find_closest_centroid(sample, centroids) # find closest centroid for each sample\n",
        "        clusters[centroid_idx].append(idx) # create index list of closest centroids\n",
        "    return clusters\n",
        "\n",
        "\n",
        "def find_closest_centroid(sample, centroids):\n",
        "    \"\"\"Distance from each sample to every centroid\"\"\"\n",
        "    distances = [euclidean_distance(sample, point) for point in centroids] # calculate distance from each sample to each centroid\n",
        "    closest_index = np.argmin(distances) # take closest centroid (one with minimal distance)\n",
        "    return closest_index\n",
        "\n",
        "\n",
        "def update_centroids(X, K, n_features, clusters):\n",
        "    \"\"\"Assign mean value of cluster features to each centroid\"\"\"\n",
        "    centroids = np.zeros((K, n_features))\n",
        "    for cluster_idx, cluster in enumerate(clusters):\n",
        "        cluster_mean = np.mean(X[cluster,:], axis=0) # find new centroid by finding mean of all points assigned to centroid\n",
        "        centroids[cluster_idx] = cluster_mean # collect all centroids\n",
        "    return centroids\n",
        "\n",
        "\n",
        "def is_converged(centroids_old, centroids):\n",
        "    \"\"\"Check if centroids have changed since last iteration\"\"\"\n",
        "    return (centroids == centroids_old).all() # return Boolean indicating whether centroids are the same as before or not\n",
        "\n",
        "\n",
        "def KMeans_from_scratch(X, K=5, max_iters=100):\n",
        "    \"\"\"Choose a random set of centroids then optimise using above functions\"\"\"\n",
        "    n_samples, n_features = X.shape\n",
        "    \n",
        "    # Initialization \n",
        "    random_sample_idx = np.random.choice(n_samples, K, replace=False) # take random sample points to be initial clusters\n",
        "    centroids = [X[idx] for idx in random_sample_idx] # label these points as centroids\n",
        "\n",
        "    iteration_num = 0 # initialize iteration tracker\n",
        "\n",
        "    # Optimization\n",
        "    for iteration in range(max_iters):\n",
        "        \n",
        "        iteration_num += 1 # track iterations required\n",
        "\n",
        "        clusters = create_clusters(K, X, centroids) # assignment to closest centroids (cluster creation)\n",
        "\n",
        "        centroids_old = centroids # archive previous centroids\n",
        "        centroids = update_centroids(X, K, n_features, clusters) # Updating centroids \n",
        "        \n",
        "       # Convergence Confirmation\n",
        "        if is_converged(centroids_old, centroids): # check if last iteration's centroids were the same as current iteration\n",
        "            break # exit loop since there was no change since last iteration\n",
        "    \n",
        "    # Clustering has converged or we have hit the max number of iteration:\n",
        "    # Determine current cluster solution\n",
        "    labels = label_cluster(n_samples, clusters)  # classify samples as the index of their clusters\n",
        "    dist = [euclidean_distance(X[row_num], centroids[int(labels[row_num])]) for row_num in range(X.shape[0])]  # get distance from each point to its centroid\n",
        "    total_dist = np.sum(np.square(dist))  # total distance calculated as sum of squares     \n",
        "\n",
        "    # Classify samples as the index of their clusters\n",
        "    return labels, iteration_num, K, centroids, total_dist"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "swAeap3yMkMc"
      },
      "source": [
        "Test the implementation by clustering the data created in 2.1 above. We know the data has 4 clusters, so feel free to set $k=4$. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iffdQPWxMkMc",
        "outputId": "8b7dfbac-8995-4d3d-cf28-120b9fa143d7"
      },
      "source": [
        "# Clustering of the artificial data\n",
        "result = KMeans_from_scratch(X,K=4, max_iters=1000)\n",
        "print (\"No.Iterations:\",result[1],\"No.Centers\", result[2], \"Location of Centroids:\", result[3], \"Total Squared Distance{:.4}\", format(result[4]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "No.Iterations: 4 No.Centers 4 Location of Centroids: [[-0.05170916 -0.02857536]\n",
            " [ 0.00980881  4.06281294]\n",
            " [ 5.00691367  4.9376256 ]\n",
            " [ 3.96107649  0.00995628]] Total Squared Distance{:.4} 1208.0726353356504\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sRPyblAZMkMc"
      },
      "source": [
        "## 2.3 Distance function\n",
        "In the lecture, we argued that clustering methods and kMeans are versatile in that the support various distance measures. Let's convince ourself that this is true. Your task is to write a custom function that calculates **cosine similarity**. You can look up the formula of the cosine similarity in the lecture slides of chapter 2, or from the Internet. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TAqO-mNBMkMc",
        "outputId": "80edf7a4-77f9-47cd-8e03-15afc44069b7"
      },
      "source": [
        "def cosine_similarity(a,b):\n",
        "  return np.dot (a,b)/ (np.linalg.norm(a)*np.linalg.norm(b))\n",
        "a = np.array([0, 0.5])\n",
        "b = np.array ([0,1])\n",
        "res_cos_sim = cosine_similarity(a,b)\n",
        "res_cos_sim\n",
        "\n",
        "def cosine_distance(a,b):\n",
        "  return 1 - cosine_similarity(a,b)\n",
        "\n",
        "from scipy.spatial import distance\n",
        "print (cosine_distance(a,b)==distance.cosine(a,b))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bIbQI0q5MkMd"
      },
      "source": [
        "Next thing to do is to change the above from scratch implementation of the kMeans algorithm such that it uses your cosine similarity function for clustering the data. It might be better to copy/past the full kMeans code one more time because this will allow you to have both versions, with Euclidean distance and cosine similarity, in the notebook. This makes it easier to re-run the clustering in case you need or want to."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kI6cutSqMkMd"
      },
      "source": [
        "\n",
        "def find_closest_centroid(sample, centroids):\n",
        "    \"\"\"Distance from each sample to every centroid\"\"\"\n",
        "    distances = [cosine_distance(sample, point) for point in centroids] # calculate distance from each sample to each centroid\n",
        "    closest_index = np.argmin(distances) # take closest centroid (one with minimal distance)\n",
        "    return closest_index\n",
        "\n",
        "\n",
        "def KMeans_with_cosine_similarity(X, K=5, max_iters=100):\n",
        "    \"\"\"Choose a random set of centroids then optimise using above functions\"\"\"\n",
        "    n_samples, n_features = X.shape\n",
        "    \n",
        "    # Initialization \n",
        "    random_sample_idx = np.random.choice(n_samples, K, replace=False) # take random sample points to be initial clusters\n",
        "    centroids = [X[idx] for idx in random_sample_idx] # label these points as centroids\n",
        "\n",
        "    iteration_num = 0 # initialize iteration tracker\n",
        "\n",
        "    # Optimization\n",
        "    for iteration in range(max_iters):\n",
        "        \n",
        "        iteration_num += 1 # track iterations required\n",
        "\n",
        "        clusters = create_clusters(K, X, centroids) # assignment to closest centroids (cluster creation)\n",
        "\n",
        "        centroids_old = centroids # archive previous centroids\n",
        "        centroids = update_centroids(X, K, n_features, clusters) # Updating centroids \n",
        "        \n",
        "        # Convergence Confirmation\n",
        "        if is_converged(centroids_old, centroids): # check if last iteration's centroids were the same as current iteration\n",
        "            break # exit loop since there was no change since last iteration\n",
        "    \n",
        "    # Clustering has converged or we have hit the max number of iteration:\n",
        "    # Determine current cluster solution\n",
        "    labels = label_cluster(n_samples, clusters)  # classify samples as the index of their clusters\n",
        "    dist = [euclidean_distance(X[row_num], centroids[int(labels[row_num])]) for row_num in range(X.shape[0])]  # get distance from each point to its centroid\n",
        "    total_dist = np.sum(np.square(dist))  # total distance calculated as sum of squares     \n",
        "\n",
        "    # Classify samples as the index of their clusters\n",
        "    return labels, iteration_num, K, centroids, total_dist"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p8ovENqDMkMd"
      },
      "source": [
        "## 2.4 New clustering solution\n",
        "The last task on the list is to apply the altered kMeans with cosine similarity to your synthetic data set. Try to come up with a suitable way to compare the results of the two versions of kMeans. It is natural to ask how the cluster solutions differ when using Euclidean distance or cosine similarity. How would you answer that question? Make use of your Python skills to come up with an answer."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jmp9Kw2YMkMd",
        "outputId": "eee17ce1-035b-4a7c-b292-e50544ccc7d8"
      },
      "source": [
        "result_cos = KMeans_with_cosine_similarity(X, K = 4, max_iters = 100)\n",
        "print (\"No.Iterations:\",result_cos[1],\"No.Centers\", result_cos[2], \"Location of Centroids:\", result_cos[3], \"Total Squared Distance{:.4}\", format(result_cos[4]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "No.Iterations: 9 No.Centers 4 Location of Centroids: [[-0.64022021 -0.50417211]\n",
            " [-0.12814866  3.38982567]\n",
            " [ 4.4296669   4.36786551]\n",
            " [ 3.32619376 -0.13206717]] Total Squared Distance{:.4} 3163.411484144413\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 605
        },
        "id": "Q7iMuOeoMkMd",
        "outputId": "9e04e832-7926-4159-a4d0-8479097e4f63"
      },
      "source": [
        "# Write some code to compare the two cluster solutions from using Euclidean distance and cosine similarity \n",
        "print(\"No.Iterations:\",result_cos[1])\n",
        "print(\"No.Iterations:\",result[1])\n",
        "print(\"No.Centers:\", result_cos[2])\n",
        "print(\"No.Centers:\", result[2])\n",
        "print(\"Location of Centroids:\", result_cos[3])\n",
        "print(\"Location of Centroids:\", result[3])\n",
        "print(\"Total Squared Distance{:.4}\",format(result[4]))\n",
        "print(\"Total Squared Distance{:.4}\",format(result_cos[4]))\n",
        "\n",
        "plt.figure(figsize=[15,5])\n",
        "\n",
        "plt.subplot(131)\n",
        "plt.scatter (X[:,0],X[:,1],c=y)\n",
        "plt.title (\"a)True Class Labels\")\n",
        "plt.ylabel(\"X1\")\n",
        "plt.xlabel(\"X2\")\n",
        "\n",
        "plt.subplot(132)\n",
        "plt.scatter (X[:,0],X[:,1],c=result[0])\n",
        "plt.title (\"b)KMeans with Euclidean distance\")\n",
        "plt.ylabel(\"X1\")\n",
        "plt.xlabel(\"X2\")\n",
        "\n",
        "plt.subplot(133)\n",
        "plt.scatter (X[:,0],X[:,1],c=result_cos[0])\n",
        "plt.title (\"c)KMeans with cosine distance\")\n",
        "plt.ylabel(\"X1\")\n",
        "plt.xlabel(\"X2\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "No.Iterations: 9\n",
            "No.Iterations: 4\n",
            "No.Centers: 4\n",
            "No.Centers: 4\n",
            "Location of Centroids: [[-0.64022021 -0.50417211]\n",
            " [-0.12814866  3.38982567]\n",
            " [ 4.4296669   4.36786551]\n",
            " [ 3.32619376 -0.13206717]]\n",
            "Location of Centroids: [[-0.05170916 -0.02857536]\n",
            " [ 0.00980881  4.06281294]\n",
            " [ 5.00691367  4.9376256 ]\n",
            " [ 3.96107649  0.00995628]]\n",
            "Total Squared Distance{:.4} 1208.0726353356504\n",
            "Total Squared Distance{:.4} 3163.411484144413\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'X2')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 58
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x360 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-vdbsLPZMkMe"
      },
      "source": [
        "## 2.5 Further tasks\n",
        "Still not enough? Ok, that is great! Here are a few ideas for some more tasks associated with kMeans and the scope of this exercise.\n",
        "- Write a custom function calculating the city-block or Manhatten metric\n",
        "- Improve the from scratch implementation of kMeans such that it supports the caller to specify the desired distance function as an argument\n",
        "- The above changes should enable you to flexibly run kMeans with Euclidean, cosine, and city-block distance. Try that out using your synthetic data\n",
        "- Use the `sklearn` function `make_classification()` to generate a more challenging data and apply kMeans to it. You can use your customer implementation of kMeans or the one available in `sklearn`\n",
        "- Run a web-search for the **IRIS data set**. It is a very well known data set. Quickly familiarize yourself with the data. Afterwards, load it using the function `sklearn.datasets.load_iris()`. Check whether kMeans is able to identify the three types of iris flowers. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-7mKrs_NZc18",
        "outputId": "b4d6008c-596f-475a-981c-2f395d5f2ebf"
      },
      "source": [
        "#Write a custom function calculating the city-block or Manhatten metric\n",
        "def city_block_distance (a,b):\n",
        "  return np.sum([abs(a-b) for (a,b) in zip(a,b)])\n",
        "a = np.array([10,20])\n",
        "b = np.array([10,40])\n",
        "city_block_distance(a,b)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "20"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mWI8liIFdN9a"
      },
      "source": [
        "def find_closest_centroid(sample, distance_function, centroids):\n",
        "    \"\"\"Distance from each sample to every centroid\"\"\"\n",
        "    distances = [distance_function(sample, point) for point in centroids] # calculate distance from each sample to each centroid\n",
        "    closest_index = np.argmin(distances) # take closest centroid (one with minimal distance)\n",
        "    return closest_index\n",
        "\n",
        "\n",
        "def create_clusters(K, X, distance_function, centroids):\n",
        "    \"\"\"Assign the samples to the closest centroids to create clusters\"\"\"\n",
        "    clusters = [[] for _ in range(K)] # creates a list of K number of lists\n",
        "    for idx, sample in enumerate(X):\n",
        "        centroid_idx = find_closest_centroid(sample, distance_function, centroids) # find closest centroid for each sample\n",
        "        clusters[centroid_idx].append(idx) # create index list of closest centroids\n",
        "    return clusters\n",
        "\n",
        "\n",
        "def KMeans_with_custom_distance(X, distance_function, K=5, max_iters=100):\n",
        "    \"\"\"Choose a random set of centroids then optimise using above functions\"\"\"\n",
        "\n",
        "    n_samples, n_features = X.shape\n",
        "    \n",
        "    # Initialization \n",
        "    random_sample_idx = np.random.choice(n_samples, K, replace=False) # take random sample points to be initial clusters\n",
        "    centroids = [X[idx] for idx in random_sample_idx] # label these points as centroids\n",
        "\n",
        "    iteration_num = 0 # initialize iteration tracker\n",
        "\n",
        "    # Optimization\n",
        "    for iteration in range(max_iters):\n",
        "        \n",
        "        iteration_num += 1 # track iterations required\n",
        "\n",
        "        clusters = create_clusters(K, X, distance_function, centroids) # assignment to closest centroids (cluster creation)\n",
        "\n",
        "        centroids_old = centroids # archive previous centroids\n",
        "        centroids = update_centroids(X, K, n_features, clusters) # Updating centroids \n",
        "        \n",
        "        # Convergence Confirmation\n",
        "        if is_converged(centroids_old, centroids): # check if last iteration's centroids were the same as current iteration\n",
        "            break # exit loop since there was no change since last iteration\n",
        "    \n",
        "    # Clustering has converged or we have hit the max number of iteration:\n",
        "    # Determine current cluster solution\n",
        "    labels = label_cluster(n_samples, clusters)  # classify samples as the index of their clusters\n",
        "    dist = [euclidean_distance(X[row_num], centroids[int(labels[row_num])]) for row_num in range(X.shape[0])]  # get distance from each point to its centroid\n",
        "    total_dist = np.sum(np.square(dist))  # total distance calculated as sum of squares     \n",
        "    \n",
        "    # Classify samples as the index of their clusters\n",
        "    return labels, iteration_num, K, centroids, total_dist"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TxGLsIV4MkMe"
      },
      "source": [
        "# Done... puh, that was a lot of work. And you did it! Congratulations!!! "
      ]
    }
  ]
}